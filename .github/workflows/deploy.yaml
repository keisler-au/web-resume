name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker images
        run: |
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" > backend/.env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> backend/.env
          echo "HOST_USER_EMAIL=${{ secrets.HOST_USER_EMAIL }}" >> backend/.env
          echo "MAILGUN_DOMAIN=${{ secrets.MAILGUN_DOMAIN }}" >> backend/.env
          echo "MAILGUN_API_KEY=${{ secrets.MAILGUN_API_KEY }}" >> backend/.env
          docker compose -f compose.yaml -f production.yaml build

      - name: Run Backend Tests
        run: docker compose run backend python manage.py test

      - name: Run Frontend Tests
        run: docker compose run frontend npm test -- --silent --watchAll=false

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker images to Docker Hub
        run: |
          docker compose -f compose.yaml -f production.yaml push

  deploy-to-vps:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: SSH to VPS and deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.VPS_IP_ADDRESS }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/web-resume
            git pull origin main
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            docker compose -f compose.yaml -f production.yaml pull
            docker compose -f compose.yaml -f production.yaml up -d
