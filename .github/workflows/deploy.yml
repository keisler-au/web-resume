name: CI/CD Pipeline for AWS

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Development Images
        run: |
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" > backend/.env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> backend/.env
          echo "HOST_USER_EMAIL=${{ secrets.HOST_USER_EMAIL }}" >> backend/.env
          docker compose build

      - name: Run Backend Tests
        run: docker compose run backend python manage.py test

      - name: Run Frontend Tests
        run: docker compose run frontend npm test -- --silent --watchAll=false

  deploy:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4


      - name: Set up SSH for deployment
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to VPS
        run: |
          # SSH into the VPS and perform the deployment
          ssh -o StrictHostKeyChecking=no root@your_vultr_ip << 'EOF'
            # Navigate to project directory
            cd /path/to/your/project

            # Pull the latest changes from the repository
            git pull origin main

            # Stop and remove the current containers
            docker-compose down

            # Rebuild the images and start the new containers
            docker-compose up --build -d

            # Clean up unused Docker resources (containers, images, networks, and volumes)
            docker system prune -af
            docker volume prune -f
          EOF
